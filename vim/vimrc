" .vim DIRECTORY
  set directory=$HOME/.vim/swapfiles//
  set undodir=$HOME/.vim/undofiles//

" LEADER
" Needs to be defined before references to it?
  let mapleader=" "

" MAPPING
  " unmap EX mode
     nmap Q <nop>
  " map 'kj' to esc. `^ is to keep cursor in it's position
      inoremap kj <esc>`^
  " map <Leader>s to esc and save.
      nnoremap <Leader>s :w<CR>
  " map ';lkj' to save and quit.
      inoremap <Leader>;lkj <esc>:wq<CR>
      nnoremap <Leader>;lkj :q<CR>
  " move normally between wrapped lines
      nmap j gj
      nmap k gk
  " begin / end line map
      nmap H ^
      nmap L $
  " togglepaste
      set pastetoggle=<Leader>tp
  " Switch ; and : mappin in normal mode
      " nnoremap ; :
      " nnoremap : ;

" LANGUAGE SPECIFIC
  " JS
  autocmd FileType javascript setlocal shiftwidth=2 tabstop=2 expandtab

" Insert Debugger
  " php below
    autocmd Filetype php nnoremap <buffer> <Leader>qd oDebug_Psysh::break(get_defined_vars());<esc>
  " php above
    autocmd Filetype php nnoremap <buffer> <Leader>qD ODebug_Psysh::break(get_defined_vars());<esc>
  " javascript below
    autocmd Filetype javascript nnoremap <buffer> <Leader>qd odebugger;<esc>
  " javascript above
    autocmd Filetype javascript nnoremap <buffer> <Leader>qD Odebugger;<esc>


" BEHAVIOR
  " Controls how quickly vim write a swp file (among other things)
    set updatetime=100
  " Turn off bell
    set vb t_vb=
    set visualbell
  " Vim monitors file changes in realtime
  " autoread only reads the file when vim does an action
    set autoread
  " save undo trees in a file
    set undofile
    set undolevels=10000


" NAVIGATION
  " Quick buffer navigation
    nnoremap <Leader>l :bnext<CR>
    nnoremap <Leader>h :bprev<CR>
    nnoremap <Leader>j :e<Space>
    nnoremap <Leader>k :bd<CR>
  " keeps lines above and below when scrolling
      set scrolloff=20
  " use mouse for navigation
      set mouse=a

" DISPLAY
  " display command always
      set showcmd
  " display line char length guide
      set colorcolumn=101
      highlight ColorColumn ctermbg=darkcyan
  " display whitespace characters
"      if has("patch-7.4.710")
"        set listchars+=space:·,eol:¬,tab:>-
"      else
"        set listchars+=eol:¬,tab:>-
"      endif
"      set list
  " display status line always
      set laststatus=2
  " display line numbers
      set number
  " display cursor line
      set cursorline
  " highlight matching parentheses / brackets
      set showmatch
  " syntax highlighting
      syntax on


" FORMATTING
  " auto indent
      set autoindent
  " 2 spaces instead of tabs
      set shiftwidth=2
      set softtabstop=2
      set expandtab
  " spellchecking
      set spelllang=en-us
  " disable syntax highlighting for files > 250k
      au BufReadPost * if getfsize(bufname("%")) > 250*1024 | set syntax= ai | endif


" SEARCH
  " use case insensitive search, except when using capital letters
      set ignorecase
      set smartcase
  " search as characters are entered
      set incsearch
  " highlight matches
      set hlsearch
  " unhighlight matches on pressing enter
      nnoremap <silent> <CR> :nohls<CR><CR>

" VIM COMMANDS
  " Hitting TAB in command mode will show possible completions
    set wildmenu
    set wildchar=<TAB>
    set wildmode=list:longest,full
    set wildignore+=*.DS_STORE,*.db,node_modules/**,*.jpg,*.png,*.gif

" SOURCE LOCAL VIMRC
try
  so $HOME/dotfiles/vim/vimrc.local
catch
endtry
