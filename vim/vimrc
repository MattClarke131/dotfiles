" .vim DIRECTORY
  set directory=$HOME/.vim/swapfiles//
  set undodir=$HOME/.vim/undofiles//

" LANGUAGE SPECIFIC
  " JS
  autocmd FileType javascript setlocal shiftwidth=2 tabstop=2 expandtab

" BEHAVIOR
  " Controls how quickly vim write a swp file (among other things)
    set updatetime=100
  " Turn off bell
    set vb t_vb=
    set visualbell
  " Vim monitors file changes in realtime
  " autoread only reads the file when vim does an action
    set autoread
  " save undo trees in a file
    set undofile
    set undolevels=10000


" DISPLAY
  " display command always
      set showcmd
  " display line char length guide
      set colorcolumn=101
      highlight ColorColumn ctermbg=darkcyan
  " display whitespace characters
"      if has("patch-7.4.710")
"        set listchars+=space:·,eol:¬,tab:>-
"      else
"        set listchars+=eol:¬,tab:>-
"      endif
"      set list
  " display status line always
      set laststatus=2
  " display line numbers
      set number
  " display cursor line
      set cursorline
  " highlight matching parentheses / brackets
      set showmatch
  " syntax highlighting
      syntax on


" FORMATTING
  " auto indent
      set autoindent
  " 2 spaces instead of tabs
      set shiftwidth=2
      set softtabstop=2
      set expandtab
  " spellchecking
      set spelllang=en-us
  " disable syntax highlighting for files > 250k
      au BufReadPost * if getfsize(bufname("%")) > 250*1024 | set syntax= ai | endif


" SEARCH
  " use case insensitive search, except when using capital letters
      set ignorecase
      set smartcase
  " search as characters are entered
      set incsearch
  " highlight matches
      set hlsearch
  " unhighlight matches on pressing enter
      nnoremap <silent> <CR> :nohls<CR><CR>

" VIM COMMANDS
  " Hitting TAB in command mode will show possible completions
    set wildmenu
    set wildchar=<TAB>
    set wildmode=list:longest,full
    set wildignore+=*.DS_STORE,*.db,node_modules/**,*.jpg,*.png,*.gif

" SOURCE LOCAL VIMRC
try
  so $HOME/dotfiles/vim/vimrc.local
catch
endtry
